# coding: utf-8

"""
    DeepVISS TAG

    DeepVISS (Deep Vision Interoperability Specification Standard) allows several computer vision solutions to produce, consume and exchange events in the same format.  # noqa: E501

    The version of the OpenAPI document: 1.2.0
    Contact: office@deepviss.org
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.challenge_statistics import ChallengeStatistics  # noqa: E501
from openapi_client.rest import ApiException

class TestChallengeStatistics(unittest.TestCase):
    """ChallengeStatistics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ChallengeStatistics
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.challenge_statistics.ChallengeStatistics()  # noqa: E501
        if include_optional :
            return ChallengeStatistics(
                average_rate = 3.14, 
                average_completion_time = 3, 
                average_validation_rate = 3.14, 
                payment_per_hour = 3.14, 
                completion_time_passed = 32312342, 
                completion_time_real = 3234234, 
                users_work_time = [
                    openapi_client.models.challenge_statistics_users_work_time.ChallengeStatistics_usersWorkTime(
                        name = '0', 
                        data = [
                            [
                                56
                                ]
                            ], )
                    ]
            )
        else :
            return ChallengeStatistics(
        )

    def testChallengeStatistics(self):
        """Test ChallengeStatistics"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
