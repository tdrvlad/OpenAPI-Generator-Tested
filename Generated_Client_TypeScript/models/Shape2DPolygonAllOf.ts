/* tslint:disable */
/* eslint-disable */
/**
 * DeepVISS TAG
 * DeepVISS (Deep Vision Interoperability Specification Standard) allows several computer vision solutions to produce, consume and exchange events in the same format.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: office@deepviss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Point2D,
    Point2DFromJSON,
    Point2DFromJSONTyped,
    Point2DToJSON,
} from './';

/**
 * 
 * @export
 * @interface Shape2DPolygonAllOf
 */
export interface Shape2DPolygonAllOf {
    /**
     * 
     * @type {Array<Point2D>}
     * @memberof Shape2DPolygonAllOf
     */
    points?: Array<Point2D>;
}

export function Shape2DPolygonAllOfFromJSON(json: any): Shape2DPolygonAllOf {
    return Shape2DPolygonAllOfFromJSONTyped(json, false);
}

export function Shape2DPolygonAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): Shape2DPolygonAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'points': !exists(json, 'points') ? undefined : ((json['points'] as Array<any>).map(Point2DFromJSON)),
    };
}

export function Shape2DPolygonAllOfToJSON(value?: Shape2DPolygonAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'points': value.points === undefined ? undefined : ((value.points as Array<any>).map(Point2DToJSON)),
    };
}


