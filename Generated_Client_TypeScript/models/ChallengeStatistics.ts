/* tslint:disable */
/* eslint-disable */
/**
 * DeepVISS TAG
 * DeepVISS (Deep Vision Interoperability Specification Standard) allows several computer vision solutions to produce, consume and exchange events in the same format.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: office@deepviss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChallengeStatisticsUsersWorkTime,
    ChallengeStatisticsUsersWorkTimeFromJSON,
    ChallengeStatisticsUsersWorkTimeFromJSONTyped,
    ChallengeStatisticsUsersWorkTimeToJSON,
} from './';

/**
 * 
 * @export
 * @interface ChallengeStatistics
 */
export interface ChallengeStatistics {
    /**
     * average payment per challenge
     * @type {number}
     * @memberof ChallengeStatistics
     */
    averageRate?: number;
    /**
     * Average time to complete a task for a challenge
     * @type {number}
     * @memberof ChallengeStatistics
     */
    averageCompletionTime?: number;
    /**
     * Average valdation per challenge
     * @type {number}
     * @memberof ChallengeStatistics
     */
    averageValidationRate?: number;
    /**
     * Estimated payment per hour
     * @type {number}
     * @memberof ChallengeStatistics
     */
    paymentPerHour?: number;
    /**
     * completion time for all the task passed miliseconds
     * @type {number}
     * @memberof ChallengeStatistics
     */
    completionTimePassed?: number;
    /**
     * completion time for all the tasks miliseconds
     * @type {number}
     * @memberof ChallengeStatistics
     */
    completionTimeReal?: number;
    /**
     * graphs
     * @type {Array<ChallengeStatisticsUsersWorkTime>}
     * @memberof ChallengeStatistics
     */
    usersWorkTime?: Array<ChallengeStatisticsUsersWorkTime>;
}

export function ChallengeStatisticsFromJSON(json: any): ChallengeStatistics {
    return ChallengeStatisticsFromJSONTyped(json, false);
}

export function ChallengeStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChallengeStatistics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'averageRate': !exists(json, 'averageRate') ? undefined : json['averageRate'],
        'averageCompletionTime': !exists(json, 'averageCompletionTime') ? undefined : json['averageCompletionTime'],
        'averageValidationRate': !exists(json, 'averageValidationRate') ? undefined : json['averageValidationRate'],
        'paymentPerHour': !exists(json, 'paymentPerHour') ? undefined : json['paymentPerHour'],
        'completionTimePassed': !exists(json, 'completionTimePassed') ? undefined : json['completionTimePassed'],
        'completionTimeReal': !exists(json, 'completionTimeReal') ? undefined : json['completionTimeReal'],
        'usersWorkTime': !exists(json, 'usersWorkTime') ? undefined : ((json['usersWorkTime'] as Array<any>).map(ChallengeStatisticsUsersWorkTimeFromJSON)),
    };
}

export function ChallengeStatisticsToJSON(value?: ChallengeStatistics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'averageRate': value.averageRate,
        'averageCompletionTime': value.averageCompletionTime,
        'averageValidationRate': value.averageValidationRate,
        'paymentPerHour': value.paymentPerHour,
        'completionTimePassed': value.completionTimePassed,
        'completionTimeReal': value.completionTimeReal,
        'usersWorkTime': value.usersWorkTime === undefined ? undefined : ((value.usersWorkTime as Array<any>).map(ChallengeStatisticsUsersWorkTimeToJSON)),
    };
}


