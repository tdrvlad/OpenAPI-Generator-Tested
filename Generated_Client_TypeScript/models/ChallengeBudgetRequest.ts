/* tslint:disable */
/* eslint-disable */
/**
 * DeepVISS TAG
 * DeepVISS (Deep Vision Interoperability Specification Standard) allows several computer vision solutions to produce, consume and exchange events in the same format.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: office@deepviss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ShapeTypeEnum,
    ShapeTypeEnumFromJSON,
    ShapeTypeEnumFromJSONTyped,
    ShapeTypeEnumToJSON,
} from './';

/**
 * 
 * @export
 * @interface ChallengeBudgetRequest
 */
export interface ChallengeBudgetRequest {
    /**
     * [TBD] Alpha-numeric, unique id of dataset
     * @type {string}
     * @memberof ChallengeBudgetRequest
     */
    datasetId?: string;
    /**
     * Alpha-numeric, unique id of evaluation policy
     * @type {string}
     * @memberof ChallengeBudgetRequest
     */
    evaluationPolicyId?: string;
    /**
     * Alpha-numeric, unique id of dispatch policy
     * @type {string}
     * @memberof ChallengeBudgetRequest
     */
    dispatchPolicyId?: string;
    /**
     * 
     * @type {ShapeTypeEnum}
     * @memberof ChallengeBudgetRequest
     */
    tagType?: ShapeTypeEnum;
    /**
     * estimated Tags Per Media Item
     * @type {number}
     * @memberof ChallengeBudgetRequest
     */
    estimatedTagsPerMediaItem?: number;
}

export function ChallengeBudgetRequestFromJSON(json: any): ChallengeBudgetRequest {
    return ChallengeBudgetRequestFromJSONTyped(json, false);
}

export function ChallengeBudgetRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChallengeBudgetRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'datasetId': !exists(json, 'datasetId') ? undefined : json['datasetId'],
        'evaluationPolicyId': !exists(json, 'evaluationPolicyId') ? undefined : json['evaluationPolicyId'],
        'dispatchPolicyId': !exists(json, 'dispatchPolicyId') ? undefined : json['dispatchPolicyId'],
        'tagType': !exists(json, 'tagType') ? undefined : ShapeTypeEnumFromJSON(json['tagType']),
        'estimatedTagsPerMediaItem': !exists(json, 'estimatedTagsPerMediaItem') ? undefined : json['estimatedTagsPerMediaItem'],
    };
}

export function ChallengeBudgetRequestToJSON(value?: ChallengeBudgetRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'datasetId': value.datasetId,
        'evaluationPolicyId': value.evaluationPolicyId,
        'dispatchPolicyId': value.dispatchPolicyId,
        'tagType': ShapeTypeEnumToJSON(value.tagType),
        'estimatedTagsPerMediaItem': value.estimatedTagsPerMediaItem,
    };
}


