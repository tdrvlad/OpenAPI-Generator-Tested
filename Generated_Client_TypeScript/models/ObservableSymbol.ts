/* tslint:disable */
/* eslint-disable */
/**
 * DeepVISS TAG
 * DeepVISS (Deep Vision Interoperability Specification Standard) allows several computer vision solutions to produce, consume and exchange events in the same format.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: office@deepviss.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LatentSymbol,
    LatentSymbolFromJSON,
    LatentSymbolFromJSONTyped,
    LatentSymbolToJSON,
} from './';

/**
 * The object which described several possible values for a an observed character.
 * @export
 * @interface ObservableSymbol
 */
export interface ObservableSymbol {
    /**
     * The segments (sub-keys) that compose the permanent identifier.
     * @type {Array<LatentSymbol>}
     * @memberof ObservableSymbol
     */
    superposedCharacter?: Array<LatentSymbol>;
}

export function ObservableSymbolFromJSON(json: any): ObservableSymbol {
    return ObservableSymbolFromJSONTyped(json, false);
}

export function ObservableSymbolFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObservableSymbol {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'superposedCharacter': !exists(json, 'superposedCharacter') ? undefined : ((json['superposedCharacter'] as Array<any>).map(LatentSymbolFromJSON)),
    };
}

export function ObservableSymbolToJSON(value?: ObservableSymbol | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'superposedCharacter': value.superposedCharacter === undefined ? undefined : ((value.superposedCharacter as Array<any>).map(LatentSymbolToJSON)),
    };
}


