# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.permanent_identifier_segment import PermanentIdentifierSegment
from openapi_server import util

from openapi_server.models.permanent_identifier_segment import PermanentIdentifierSegment  # noqa: E501

class PermanentIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hash_code=None, segments=None):  # noqa: E501
        """PermanentIdentifier - a model defined in OpenAPI

        :param hash_code: The hash_code of this PermanentIdentifier.  # noqa: E501
        :type hash_code: str
        :param segments: The segments of this PermanentIdentifier.  # noqa: E501
        :type segments: List[PermanentIdentifierSegment]
        """
        self.openapi_types = {
            'hash_code': str,
            'segments': List[PermanentIdentifierSegment]
        }

        self.attribute_map = {
            'hash_code': 'hashCode',
            'segments': 'segments'
        }

        self._hash_code = hash_code
        self._segments = segments

    @classmethod
    def from_dict(cls, dikt) -> 'PermanentIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PermanentIdentifier of this PermanentIdentifier.  # noqa: E501
        :rtype: PermanentIdentifier
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hash_code(self):
        """Gets the hash_code of this PermanentIdentifier.

        The hashcode obtained by running a SHA-512 on the binary values of the segments, in the ascending order of indexes  # noqa: E501

        :return: The hash_code of this PermanentIdentifier.
        :rtype: str
        """
        return self._hash_code

    @hash_code.setter
    def hash_code(self, hash_code):
        """Sets the hash_code of this PermanentIdentifier.

        The hashcode obtained by running a SHA-512 on the binary values of the segments, in the ascending order of indexes  # noqa: E501

        :param hash_code: The hash_code of this PermanentIdentifier.
        :type hash_code: str
        """

        self._hash_code = hash_code

    @property
    def segments(self):
        """Gets the segments of this PermanentIdentifier.

        The segments (sub-keys) that compose the permanent identifier.  # noqa: E501

        :return: The segments of this PermanentIdentifier.
        :rtype: List[PermanentIdentifierSegment]
        """
        return self._segments

    @segments.setter
    def segments(self, segments):
        """Sets the segments of this PermanentIdentifier.

        The segments (sub-keys) that compose the permanent identifier.  # noqa: E501

        :param segments: The segments of this PermanentIdentifier.
        :type segments: List[PermanentIdentifierSegment]
        """

        self._segments = segments
