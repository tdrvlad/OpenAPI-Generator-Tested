# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.internal_subjective_opinion import InternalSubjectiveOpinion
from openapi_server import util

from openapi_server.models.internal_subjective_opinion import InternalSubjectiveOpinion  # noqa: E501

class LatentSymbol(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value=None, subjective_opinion=None):  # noqa: E501
        """LatentSymbol - a model defined in OpenAPI

        :param value: The value of this LatentSymbol.  # noqa: E501
        :type value: str
        :param subjective_opinion: The subjective_opinion of this LatentSymbol.  # noqa: E501
        :type subjective_opinion: InternalSubjectiveOpinion
        """
        self.openapi_types = {
            'value': str,
            'subjective_opinion': InternalSubjectiveOpinion
        }

        self.attribute_map = {
            'value': 'value',
            'subjective_opinion': 'subjectiveOpinion'
        }

        self._value = value
        self._subjective_opinion = subjective_opinion

    @classmethod
    def from_dict(cls, dikt) -> 'LatentSymbol':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LatentSymbol of this LatentSymbol.  # noqa: E501
        :rtype: LatentSymbol
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this LatentSymbol.


        :return: The value of this LatentSymbol.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this LatentSymbol.


        :param value: The value of this LatentSymbol.
        :type value: str
        """

        self._value = value

    @property
    def subjective_opinion(self):
        """Gets the subjective_opinion of this LatentSymbol.


        :return: The subjective_opinion of this LatentSymbol.
        :rtype: InternalSubjectiveOpinion
        """
        return self._subjective_opinion

    @subjective_opinion.setter
    def subjective_opinion(self, subjective_opinion):
        """Sets the subjective_opinion of this LatentSymbol.


        :param subjective_opinion: The subjective_opinion of this LatentSymbol.
        :type subjective_opinion: InternalSubjectiveOpinion
        """

        self._subjective_opinion = subjective_opinion
